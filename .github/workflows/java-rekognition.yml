on:
  push:
  workflow_dispatch:

jobs:
  build_and_maybe_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build image
        run: |
          rev=$(git rev-parse --short HEAD)
          docker build . -t ${{ vars.AWS_ACCOUNT_URL }}/${{ vars.AWS_ECR }}:$rev
      - name: Deploy to aws ECR
        if: github.ref_name == 'main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-west-1
        run: |
          aws ecr get-login-password | docker login -u AWS --password-stdin ${{ vars.AWS_ACCOUNT_URL }}/${{ vars.AWS_ECR }}
          rev=$(git rev-parse --short HEAD)
          docker tag ${{ vars.AWS_ACCOUNT_URL }}/${{ vars.AWS_ECR }}:$rev ${{ vars.AWS_ACCOUNT_URL }}/${{ vars.AWS_ECR }}:latest
          docker push ${{ vars.AWS_ACCOUNT_URL }}/${{ vars.AWS_ECR }}:$rev
          docker push ${{ vars.AWS_ACCOUNT_URL }}/${{ vars.AWS_ECR }}:latest

  infrastructure:
    runs-on: ubuntu-latest
    needs: build_and_maybe_deploy
    defaults:
      run:
        working-directory: ./infra
    env:
      TF_VAR_service_name: ${{ vars.SERVICE_NAME }}
      TF_VAR_aws_account_number: ${{ secrets.AWS_ACCOUNT }}
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
      TF_VAR_ecr_repository: ${{ vars.AWS_ECR }}
      # TF_VAR_ecr_tag: ${{ vars.AWS_ECR_TAG }} # Optional, defaults to latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v3
      - name: Init
        run: terraform init
      - name: Validate
        run: terraform validate -no-color
      - name: Plan
        run: terraform plan -no-color -out plan
      - name: Apply
        if: github.ref_name == 'main' # Only apply if on main
        run: terraform apply -auto-approve ./plan